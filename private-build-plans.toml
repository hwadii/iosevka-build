[buildPlans.iosevka-build]       # <iosevka-build> is your plan name
family = "Iosevka Build"         # Font menu family name
spacing = "fixed"                # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
serifs = "sans"                  # Optional; Values: `sans` or `slab`
no-cv-ss = true

###################################################################################################
# Configure variants

# # Optional; Whether to inherit a `ss##` variant
# [buildPlans.iosevka-build.variants]
# inherits = "ss01"

# Optional; Configure single character's variant
[buildPlans.iosevka-build.variants.design]
capital-a = "curly-serifless"
capital-b = "standard-serifless"
capital-c = "serifless"
capital-d = "more-rounded-serifless"
capital-e = "serifless"
capital-f = "serifless"
capital-g = "toothed-serifless-hooked"
capital-h = "serifless"
capital-i = "short-serifed"
capital-j = "serifed-symmetric"
capital-k = "curly-serifless"
capital-l = "serifless"
capital-m = "hanging"
capital-n = "standard"
capital-p = "closed"
capital-q = "crossing"
capital-r = "straight"
capital-s = "serifless"
capital-t = "serifless"
capital-u = "toothless-rounded"
capital-v = "straight"
capital-w = "straight"
capital-x = "straight-serifless"
capital-y = "straight-serifless"
capital-z = "straight-serifless"
a = "double-storey-serifless"
b = "toothed"
c = "serifless"
d = "toothed-serifless"
e = "flat-crossbar"
f = "flat-hook-crossbar-at-x-height"
g = "single-storey-flat-hook-serifless"
h = "straight"
i = "serifed"
j = "flat-hook-serifed"
k = "straight-serifless"
l = "serifed-flat-tailed"
m = "earless-rounded-double-arch"
n = "earless-corner-straight"
p = "earless-corner"
q = "earless-corner"
r = "compact"
s = "serifless"
t = "flat-hook-short-neck"
u = "toothless-rounded"
y = "cursive-flat-hook"
zero = "dotted-oval"
one = "base-flat-top-serif"
two = "straight-neck"
three = "flat-top"
four = "closed"
six = "open-contour"
eight = "two-circles"
nine = "open-contour"
asterisk = "penta-low"
underscore = "low"
caret = "high"
brace = "straight"
ampersand = "upper-open"
at = "fourfold-solid-inner"
percent = "dots"
question = "corner"
punctuation-dot = "square"

[buildPlans.iosevka-build.variants.italic]
a = "single-storey-earless-corner-tailed"
e = "rounded"
f = "flat-hook-extended"
g = "single-storey-flat-hook-serifless"
k = "cursive-serifless"
m = "short-leg"
n = "straight"
p = "eared"
q = "straight"
u = "toothed"
v = "curly"
w = "curly"
z = "curly-serifless"
seven = "curly-serifless"

# End variant section
###################################################################################################

###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
#             and "shape" properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.
[buildPlans.iosevka-build.weights.regular]
shape = 400
menu  = 400
css   = 400

[buildPlans.iosevka-build.weights.bold]
shape = 700
menu  = 700
css   = 700

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# When this section is absent, all slopes would be built.

[buildPlans.iosevka-build.slopes.upright]
angle = 0             # Angle in degrees. Valid range [0, 15]
shape = "upright"     # Slope grade used for shape selection.  `upright` | `oblique` | `italic`
menu  = "upright"     # Slope grade used for naming.           `upright` | `oblique` | `italic`
css   = "normal"      # Slope grade used for webfont CSS.      `normal`  | `oblique` | `italic`

[buildPlans.iosevka-build.slopes.italic]
angle = 9.4
shape = "italic"
menu  = "italic"
css   = "italic"

# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.iosevka-build.widths.normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

[buildPlans.iosevka-build.widths.extended]
shape = 600
menu  = 7
css   = "expanded"

# End width section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

# End metric override section
###################################################################################################

[collectPlans.iosevka-build]
from = ["iosevka-build"]

[buildPlans.iosevka-ss09-build]      # <iosevka-custom> is your plan name
family = "Iosevka SS09 Build"        # Font menu family name
spacing = "normal"               # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
serifs = "sans"                  # Optional; Values: `sans` or `slab`

webfont-formats = ['ttf', 'woff2']

###################################################################################################
# Configure variants

# Optional; Whether to inherit a `ss##` variant
[buildPlans.iosevka-ss09-build.variants]
inherits = "ss09"

[buildPlans.iosevka-ss09-build.variants.design]
brace = "straight"
at = "fourfold-solid-inner"

# End variant section
###################################################################################################

###################################################################################################
# Configure ligations

[buildPlans.iosevka-ss09-build.ligations]
inherits = "default-calt"   # Optional; inherits an existing ligation set
disables = []               # Optional; disable specific ligation groups, overrides inherited ligation set
enables  = []               # Optional; enable specific ligation groups, overrides inherited ligation set

# End ligation section
###################################################################################################


###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
#             and "shape" properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.
[buildPlans.iosevka-ss09-build.weights.regular]
shape = 400  # Weight for glyph shapes.
menu  = 400  # Weight for the font's names.
css   = 400  # Weight for webfont CSS.

[buildPlans.iosevka-ss09-build.weights.bold]
shape = 700
menu  = 700
css   = 700

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# When this section is absent, all slopes would be built.

[buildPlans.iosevka-ss09-build.slopes.upright]
angle = 0             # Angle in degrees. Valid range [0, 15]
shape = "upright"     # Slope grade used for shape selection.  `upright` | `oblique` | `italic`
menu  = "upright"     # Slope grade used for naming.           `upright` | `oblique` | `italic`
css   = "normal"      # Slope grade used for webfont CSS.      `normal`  | `oblique` | `italic`

[buildPlans.iosevka-ss09-build.slopes.italic]
angle = 9.4
shape = "italic"
menu  = "italic"
css   = "italic"
# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.iosevka-ss09-build.widths.normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

# End width section
###################################################################################################

###################################################################################################
# Character Exclusion
# Specify character ranges in the section below to exclude certain characters from the font being
# built. Remove this section when this feature is not needed.

# End character exclusion
###################################################################################################

###################################################################################################
# Compatibility Ligatures
# Certain applications like Emacs does not support proper programming liagtures provided by
# OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
# following section to build PUA characters that are generated from the OpenType ligatures.
# Remove this section when compatibility ligatures are not needed.

# End compatibility ligatures section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

# End metric override section
###################################################################################################
[collectPlans.iosevka-ss09-build]
from = ["iosevka-ss09-build"]

[buildPlans.iosevka-random]      # <iosevka-random> is your plan name
family = "Iosevka Random"        # Font menu family name
spacing = "normal"               # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
serifs = "sans"                  # Optional; Values: `sans` or `slab`

###################################################################################################
# Configure variants

# Optional; Whether to inherit a `ss##` variant
[buildPlans.iosevka-random.variants]
inherits = "ss08"

# Optional; Configure single character's variant
[buildPlans.iosevka-random.variants.design]
capital-d = 'standard-serifless'
capital-g = 'toothless-corner-serifless-hooked'
capital-i = 'serifed'
capital-j = 'serifed'
capital-n = 'standard'
capital-q = 'crossing-curly-tailed'
a = 'double-storey-toothless-corner'
g = 'double-storey-open'
l = 'serifed-flat-tailed'
m = 'earless-corner-double-arch'
n = 'earless-corner-straight'
p = 'earless-corner'
q = 'earless-corner'
r = 'earless-corner'
t = 'flat-hook-short-neck'
u = 'toothless-corner'
y = 'curly-turn'
zero = 'dotted'
four = 'open'
six = 'straight-bar'
seven = 'straight-serifless'
nine = 'straight-bar'
lig-ltgteq = 'slanted'
# dollar = 'open'
paren = 'flat-arc'
asterisk = 'penta-low'
# ampersand = 'et-toothless-corner'
bar = 'force-upright'

# Optional; Configure single character's variant for Italic only; Overrides [design]
[buildPlans.iosevka-random.variants.italic]
i = 'tailed-serifed'
l = 'tailed-serifed'

# End variant section
###################################################################################################

###################################################################################################
# Configure ligations

[buildPlans.iosevka-random.ligations]
inherits = "default-calt"   # Optional; inherits an existing ligation set
disables = []               # Optional; disable specific ligation groups, overrides inherited ligation set
enables  = []               # Optional; enable specific ligation groups, overrides inherited ligation set

# End ligation section
###################################################################################################


###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
#             and "shape" properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.
[buildPlans.iosevka-random.weights.regular]
shape = 400  # Weight for glyph shapes.
menu  = 400  # Weight for the font's names.
css   = 400  # Weight for webfont CSS.

[buildPlans.iosevka-random.weights.bold]
shape = 700
menu  = 700
css   = 700

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# When this section is absent, all slopes would be built.

[buildPlans.iosevka-random.slopes.upright]
angle = 0             # Angle in degrees. Valid range [0, 15]
shape = "upright"     # Slope grade used for shape selection.  `upright` | `oblique` | `italic`
menu  = "upright"     # Slope grade used for naming.           `upright` | `oblique` | `italic`
css   = "normal"      # Slope grade used for webfont CSS.      `normal`  | `oblique` | `italic`

[buildPlans.iosevka-random.slopes.oblique]
angle = 9.4
shape = "oblique"
menu  = "oblique"
css   = "oblique"

[buildPlans.iosevka-random.slopes.italic]
angle = 9.4
shape = "italic"
menu  = "italic"
css   = "italic"
# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.iosevka-random.widths.normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

# End width section
###################################################################################################

###################################################################################################
# Character Exclusion
# Specify character ranges in the section below to exclude certain characters from the font being
# built. Remove this section when this feature is not needed.

[buildPlans.iosevka-random.exclude-chars]
ranges = [[10003, 10008]]

# End character exclusion
###################################################################################################

###################################################################################################
# Compatibility Ligatures
# Certain applications like Emacs does not support proper programming liagtures provided by
# OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
# following section to build PUA characters that are generated from the OpenType ligatures.
# Remove this section when compatibility ligatures are not needed.

[[buildPlans.iosevka-random.compatibility-ligatures]]
unicode = 57600 # 0xE100
featureTag = 'calt'
sequence = '<*>'

# End compatibility ligatures section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

[buildPlans.iosevka-random.metric-override]
leading = 1250
winMetricAscenderPad = 0
winMetricDescenderPad = 0
powerlineScaleY = 1
powerlineScaleX = 1
powerlineShiftY = 0
powerlineShiftX = 0

# End metric override section
###################################################################################################
[collectPlans.iosevka-random]
from = ["iosevka-random"]

[buildPlans.iosevka-comfy]       # <iosevka-comfy> is your plan name
family = "Iosevka Comfy"         # Font menu family name
spacing = "fixed"                # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
serifs = "sans"                  # Optional; Values: `sans` or `slab`

###################################################################################################
# Configure variants

# # Optional; Whether to inherit a `ss##` variant
# [buildPlans.iosevka-comfy.variants]
# inherits = "ss01"

# Optional; Configure single character's variant
[buildPlans.iosevka-comfy.variants.design]
cv01 = 1    # A cap straight
cv02 = 1    # B cap straight
cv03 = 1    # C cap serifless
cv04 = 6    # D cap curly with top and bottom serif (without serifs TODO reads like TOOO at small point sizes)
cv05 = 1    # E cap serifless
cv06 = 1    # F cap serifless
cv07 = 4    # G cap toothed
cv08 = 1    # H cap serifless
cv09 = 1    # I cap long serifs
cv10 = 2    # J cap serified
cv11 = 2    # K cap curly
cv12 = 1    # L cap serifless
cv13 = 3    # M cap short middle leg slanted sides
cv14 = 1    # N cap symmetric
cv15 = 1    # P cap straight
cv16 = 4    # Q cap crossing tail
cv17 = 1    # R cap straight
cv18 = 1    # S cap serifless
cv19 = 1    # T cap serifless
cv20 = 3    # U cap serifless
cv21 = 1    # V cap straight
cv22 = 1    # W straight
cv23 = 1    # X cap straight
cv24 = 1    # Y cap straight
cv25 = 1    # Z cap straight
cv26 = 10   # a single storey earless tailed bottom
cv27 = 1    # b toothed
cv28 = 1    # c serifless
cv29 = 1    # d toothed
cv33 = 1    # h straight
cv34 = 10   # i serified flat tailed
cv35 = 6    # j flat hook serified
cv37 = 10   # l serified flat tailed
cv42 = 9    # r compact
cv43 = 1    # s serifless
cv44 = 2    # t flat hook
cv45 = 4    # u tailed
cv49 = 6    # y cursive flat terminal hook
cv53 = 1    # Λ, Δ lambda and delta cap straight
cv54 = 2    # α alpha straight tailed
cv55 = 1    # Γ gamma cap straight
cv56 = 6    # ι iota serified flat tailed
cv57 = 2    # λ lambda top tailed
cv71 = 13   # 0 oval dashed forward slash
cv74 = 2    # 3 arched
cv76 = 2    # 5 open contour
cv78 = 1    # 7 straight
cv79 = 3    # 8 two asymmetric circles
cv81 = 2    # ~ tilde low
cv82 = 2    # * asterisk five-pointed low
cv83 = 1    # _ underscore right below baseline
cv85 = 1    # ^ uptick high
cv86 = 1    # ( parentheses normal slope
cv87 = 2    # { braces curly
cv88 = 1    # # column straight
cv91 = 2    # $ dollar strike through
cv92 = 2    # ¢ cent strike through
cv93 = 1    # % percent dots
cv94 = 1    # | bar natural slope
cv95 = 2    # ≥ equal-or-{higher,lower} slanted
cv96 = 1    # ' single quote straight
cv97 = 1    # ` grave/backtick straight
cv98 = 1    # ? smooth
cv99 = 1    # .:; circular punctuation marks

# Optional; Configure single character's variant for Upright and Oblique; Overrides [design]
[buildPlans.iosevka-comfy.variants.upright]
cv30 = 1    # e straight
cv31 = 16   # f serifless bottom flat top crossbar at x height
cv32 = 9    # g single storey flat hook earless cornered top
cv36 = 1    # k straight
cv38 = 6    # m earless double arch short middle leg
cv39 = 3    # n earless straight
cv40 = 2    # p earless
cv41 = 2    # q earless
cv46 = 1    # v straight
cv47 = 1    # w straight
cv48 = 1    # x straight
cv50 = 1    # z straight
cv72 = 2    # 1 serified with base
cv73 = 1    # 2 straight
cv75 = 3    # 4 semi-open contour
cv77 = 3    # 6 straight
cv80 = 3    # 9 straight
cv89 = 2    # & et open top (ampersand)
cv90 = 1    # @ at threefold

# Optional; Configure single character's variant for Italic only; Overrides [design]
[buildPlans.iosevka-comfy.variants.italic]
cv30 = 2    # e curly
cv31 = 14   # f extended flat top bottom hook
cv32 = 7    # g single storey flat hook
cv36 = 2    # k curly
cv38 = 2    # m straight middle shortleg
cv39 = 1    # n straight
cv40 = 1    # p straight
cv41 = 1    # q straight
cv46 = 2    # v curly
cv47 = 2    # w curly short middle top
cv48 = 2    # x curly
cv50 = 4    # z curly
cv72 = 1    # 1 serified no base
cv73 = 2    # 2 curly
cv75 = 1    # 4 closed contour crossing
cv77 = 1    # 6 closed contour
cv80 = 1    # 9 closed contour
cv89 = 4    # & et open top toothed (ampersand)
cv90 = 3    # @ at short

# End variant section
###################################################################################################

###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
#             and "shape" properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.
[buildPlans.iosevka-comfy.weights.light]
shape = 300
menu  = 300
css   = 300

[buildPlans.iosevka-comfy.weights.semilight]
shape = 350
menu  = 350
css   = 350

[buildPlans.iosevka-comfy.weights.regular]
shape = 400
menu  = 400
css   = 400

[buildPlans.iosevka-comfy.weights.bold]
shape = 700
menu  = 700
css   = 700

[buildPlans.iosevka-comfy.weights.extrabold]
shape = 800
menu  = 800
css   = 800

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# When this section is absent, all slopes would be built.

[buildPlans.iosevka-comfy.slopes.upright]
angle = 0             # Angle in degrees. Valid range [0, 15]
shape = "upright"     # Slope grade used for shape selection.  `upright` | `oblique` | `italic`
menu  = "upright"     # Slope grade used for naming.           `upright` | `oblique` | `italic`
css   = "normal"      # Slope grade used for webfont CSS.      `normal`  | `oblique` | `italic`

[buildPlans.iosevka-comfy.slopes.italic]
angle = 9.4
shape = "italic"
menu  = "italic"
css   = "italic"

# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

# [buildPlans.iosevka-comfy.widths.condensed]
# shape = 485
# menu  = 3
# css   = "condensed"

[buildPlans.iosevka-comfy.widths.normal]
shape = 525        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

# [buildPlans.iosevka-comfy.widths.expanded]
# shape = 600
# menu  = 7
# css   = "expanded"

# End width section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

[buildPlans.iosevka-comfy.metric-override]
leading = 1100

# End metric override section
###################################################################################################
[collectPlans.iosevka-comfy]
from = ["iosevka-comfy"]
